// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/empovit/assisted-agent-simulator/server/models"
)

// GetCommandsReader is a Reader for the GetCommands structure.
type GetCommandsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCommandsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCommandsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCommandsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCommandsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 501:
		result := NewGetCommandsNotImplemented()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCommandsOK creates a GetCommandsOK with default headers values
func NewGetCommandsOK() *GetCommandsOK {
	return &GetCommandsOK{}
}

/*GetCommandsOK handles this case with default header values.

Success.
*/
type GetCommandsOK struct {
	Payload *models.Command
}

func (o *GetCommandsOK) Error() string {
	return fmt.Sprintf("[GET /commands][%d] getCommandsOK  %+v", 200, o.Payload)
}

func (o *GetCommandsOK) GetPayload() *models.Command {
	return o.Payload
}

func (o *GetCommandsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Command)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCommandsNotFound creates a GetCommandsNotFound with default headers values
func NewGetCommandsNotFound() *GetCommandsNotFound {
	return &GetCommandsNotFound{}
}

/*GetCommandsNotFound handles this case with default header values.

Not found
*/
type GetCommandsNotFound struct {
}

func (o *GetCommandsNotFound) Error() string {
	return fmt.Sprintf("[GET /commands][%d] getCommandsNotFound ", 404)
}

func (o *GetCommandsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCommandsInternalServerError creates a GetCommandsInternalServerError with default headers values
func NewGetCommandsInternalServerError() *GetCommandsInternalServerError {
	return &GetCommandsInternalServerError{}
}

/*GetCommandsInternalServerError handles this case with default header values.

Unexpected error
*/
type GetCommandsInternalServerError struct {
}

func (o *GetCommandsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /commands][%d] getCommandsInternalServerError ", 500)
}

func (o *GetCommandsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCommandsNotImplemented creates a GetCommandsNotImplemented with default headers values
func NewGetCommandsNotImplemented() *GetCommandsNotImplemented {
	return &GetCommandsNotImplemented{}
}

/*GetCommandsNotImplemented handles this case with default header values.

Not implemented
*/
type GetCommandsNotImplemented struct {
}

func (o *GetCommandsNotImplemented) Error() string {
	return fmt.Sprintf("[GET /commands][%d] getCommandsNotImplemented ", 501)
}

func (o *GetCommandsNotImplemented) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
